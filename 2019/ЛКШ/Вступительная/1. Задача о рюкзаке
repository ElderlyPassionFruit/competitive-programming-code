1. Задача о рюкзаке

Не ограничивая общности будем считать, что все числа в массиве различны.

Всего, теоретически, возможно 3 случая:
1) В ответ войдут 2 отрицательных и 2 неотрицательных числа.
2) В ответ войдут 3 отрицательных и 1 неотрицательное число.
3) В ответ войдёт 1 отрицательное и 3 неотрицательных числа.

Заметим, что случаи 2-3 симметричны, поэтому нам нужно рассмотреть случай 1 и один из пары 2-3.

Решим задачу для каждого из этих случаев отдельно.

a) Случай 1).
Запишем в массив A все попарные суммы двух отрицательных элементов и отсортируем его по возрастанию.
Затем переберём все пары из двух неотрицательных элементов x и y, проверим, с помощью бинпоиска, что в массиве A есть нужная нам сумма, то есть -(x + y). Восстановить ответ можно либо за O(n*n), просто перебрав все пары отрицательных элементов ещё раз, либо изначально сохранив в массиве A не только сумму, но и сами элементы.

Оценка сложности по памяти - O(n*n), т.к. нам нужно хранить массив из n элементов, и массив в котором содержатся все попарные суммы отрицательных элементов, которых максимум O(n) => пар O(n*n) => нужен массив размера n*n => сложность O(n*n).

Оценка сложности по времени - O(n*n*log(n)), т.к. на предподсчёт уйдёт n*n*log(n), т.к. нужно построить и отсортировать массив из O(n*n) элементов, и на обработуку уйдёт так же n*n*log(n*n) = 2*n*n*log(n), т.к. мы переберём 2 элемента и для каждой пары проверим нужную сумму в массиве A. => O(3*n*n*log(n)) = O(n*n*log(n)).

b) Случай 2).
В целом, он не сильно отличается от первого случая, давайте так же запишем в массив A все попарные суммы двух неотрицательных чисел, и пару из этих двух элементов и отсортируем его в первую очередь по возрастанию суммы, во вторую по первому элементу из пары, в третью по второму. Затем будем перебирать один отрицательный элемент - x, и один неотрицательный элемент - y, и бинпоиском искать нужную сумму -(x + y) в массиве A. Есть некоторая сложность с тем, что если данную сумму можно получить с использованием элемента y. Но заметим, что суму q с использованием элемента y можно получить только 1 раз, т.к. все элементы различны => нужно лишь проверить, что элемент y отсутствует в найденом нами, в если присутствует, проверить в массиве A 2 соседних с ним, и если хоть в одном из них сумма -(x + y) - он нам подходит. Восстановление ответа происходит автоматически, т.к. в элементе с суммой есть два слагаемых.

Оценка сложности по памяти - O(n*n), аналогично первому случаю.

Оценка сложности по времени - O(n*n*log(n)) - аналогично первому случаю.

